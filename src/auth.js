'use strict';

const request = require('superagent');
const co = require('co');

module.exports = {

  /**
   * Returns the object that handles Dropbox API v2 authentication
   *
   * @param  {Object} config - configurations to be sended via HTTP request
   * @return {Object}        - methods that handle authentication
   */
  authenticate: function (config) {
    return {

      /**
       * Function that returns the URL to get either the authorization code
       * or the access token, depending on the authentication flow choosed (code or token)
       *
       * @return {String}      - URL
       */
      generateAuthUrl: function () {
        return 'https://www.dropbox.com/oauth2/authorize?' +
          'client_id=' + config.client_id +
          '&response_type=' + config.response_type +
          '&redirect_uri=' + config.redirect_uri +
          '&state=' + config.state +
          '&require_role=' + (config.require_role ? config.require_role : 'personal') +
          '&force_reapprove=' + (config.force_reapprove ? config.force_reapprove : false) +
          '&disable_signup=' + (config.disable_signup ? config.disable_signup : false);
      },

      /**
       * Function that gets the access token via GET request.
       * This function should be used when using the token flow
       *
       * queryString usually is location.hash.substring(1)
       *
       * @see http://dev.mendeley.com/reference/topics/authorization_implicit.html
       *
       * @param  {String}   authUrl - URL generated by the generateAuthUrl() function
       * @param  {Function} callback
       */
      getToken: function (queryString) {
        let params = {},
            regex = /([^&=]+)=([^&]*)/g,
            m;

        while (m = regex.exec(queryString)) {
          params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
        }

        return params;
      },

      /**
       * Function that gets the access token by sending the code
       * received by the user authorization in the browser
       *
       * @param  {String}   code     - Authorization Code received whn the user authorizes the app.
       * @param  {Function} callback
       */
      getTokenByCode: function (code) {
        return co(function *coGetTokenByCode() {
          let res = yield request
            .post('https://api.dropboxapi.com/oauth2/token')
            .type('form')
            .send({
              code: code,
              grant_type: 'authorization_code',
              client_id: 'config.client_id',
              client_secret: config.client_secret,
              redirect_uri: config.redirect_uri,
            });

          if (Object.keys(res.body).length === 0) {
            res.body = JSON.parse(res.text);
          }

          if (res.body.error) {
            Promise.reject(res.body.error);
          }

          config.token = res.body.access_token;
          return res.body;
        });
      }
    };
  }
};
